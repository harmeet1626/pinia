{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"about\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"This is an about page\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.increase_counter())\n  }, \"++\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.decrease_counter())\n  }, \"--\"), _createTextVNode(\" \" + _toDisplayString($setup.store_value) + \" \" + _toDisplayString($setup.check), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;gCACTC,oBAA8B,IAA9B,EAA8B,IAA9B,EAAI,uBAAJ,EAAyB;AAAA;AAAzB;;;uBADFC,oBAMM,KANN,cAMM,CALJC,UAKI,EAJJF,oBAA+C,QAA/C,EAA+C;IAAtCG,OAAK,sCAAEC,yBAAF;EAAiC,CAA/C,EAAoC,IAApC,CAII,EAHJJ,oBAA+C,QAA/C,EAA+C;IAAtCG,OAAK,sCAAEC,yBAAF;EAAiC,CAA/C,EAAoC,IAApC,CAGI,mBAH2C,MAC/CC,iBAAED,kBAAF,CAD+C,GAChC,GADgC,GAE/CC,iBAAGD,YAAH,GAAQ;EAAA;GACJ,CANN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","onClick","$setup","_toDisplayString"],"sourceRoot":"","sources":["/home/user/Vue project/vue_pinia/src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"about\">\n    <h1>This is an about page</h1>\n    <button @click=\"increase_counter()\">++</button>\n    <button @click=\"decrease_counter()\">--</button>\n    {{store_value}}\n    {{ check }}\n  </div>\n</template>\n<script setup>\nimport {  ref, computed } from \"vue\";\nimport {useCounterStore} from \"../store/counter\"\n\nconst store = useCounterStore()\n// const counter = ref(0);\nlet store_value = ref(store.counter)\n\n\nconst increase_counter = () => {\n  store.increase()\n};\nconst decrease_counter = () => {\n  store.decrease()\n};\nconst check = computed(() => {\n  if (store.counter % 2 == 0) {\n    return \"even\";\n  } else {\n    return \"odd\";\n  }\n \n});\n</script>\n"]},"metadata":{},"sourceType":"module"}